/*****************************************************
 *  Microchip CAP1188 Library
 *  File:   CAP1188.h
 *  Date:   2016_05_05
 *  Author: Stephen Minakian
 *  Version:0.0.1
 *****************************************************/

#ifndef _CAP1188_H
#define _CAP1188_H

#include "application.h"

#define CAP1188_DEFAULT_ADDRESS                 0x28
#define CAP1188_REG_MAIN_CONTROL
#define CAP1188_REG_GENERAL_STATUS
#define CAP1188_REG_SENSOR_INPUT_STATUS
#define CAP1188_REG_LED_STATUS
#define CAP1188_REG_NOISE_FLAG_STATUS
#define CAP1188_REG_SENSOR_INPUT_1_DELTA
#define CAP1188_REG_SENSOR_INPUT_2_DELTA
#define CAP1188_REG_SENSOR_INPUT_3_DELTA
#define CAP1188_REG_SENSOR_INPUT_4_DELTA
#define CAP1188_REG_SENSOR_INPUT_5_DELTA
#define CAP1188_REG_SENSOR_INPUT_6_DELTA
#define CAP1188_REG_SENSOR_INPUT_7_DELTA
#define CAP1188_REG_SENSOR_INPUT_8_DELTA
#define CAP1188_REG_SENSITIVITY_CONTROL
#define CAP1188_REG_CONFIGURATION
#define CAP1188_REG_SENSOR_INPUT_ENABLE
#define CAP1188_REG_SENSOR_INPUT_CONFIG
#define CAP1188_REG_SENSOR_INPUT_CONFIG2
#define CAP1188_REG_AVG_AND_SAMPLE_CONFIG
#define CAP1188_REG_CALIBRATION_ACTIVATE
#define CAP1188_REG_INTERRUPT_ENABLE
#define CAP1188_REG_REPEAT_RATE_ENABLE
#define CAP1188_REG_MULTIPLE_TOUCH_CONFIG	//
#define CAP1188_REG_MULTI_TOUCH_PATTERN_CONFIG
#define CAP1188_REG_MULTI_TOUCH_PATTERN
#define CAP1188_REG_RECALIBRATION_CONFIG
#define CAP1188_REG_SENSOR_INPUT_1_THRESHOLD
#define CAP1188_REG_SENSOR_INPUT_2_THRESHOLD
#define CAP1188_REG_SENSOR_INPUT_3_THRESHOLD
#define CAP1188_REG_SENSOR_INPUT_4_THRESHOLD
#define CAP1188_REG_SENSOR_INPUT_5_THRESHOLD
#define CAP1188_REG_SENSOR_INPUT_6_THRESHOLD
#define CAP1188_REG_SENSOR_INPUT_7_THRESHOLD
#define CAP1188_REG_SENSOR_INPUT_8_THRESHOLD
#define CAP1188_REG_SENSOR_INPUT_NOISE_THRESHOLD
// Standby Configuration Registers
#define CAP1188_REG_STANDBY_CHANNEL
#define CAP1188_REG_STANDBY_CONFIGURATION
#define CAP1188_REG_STANDBY_SENSITIVITY
#define CAP1188_REG_STANDBY_THRESHOLD

#define CAP1188_REG_CONFIGURATION_2
// BASECOUNT REGISTERS
#define CAP1188_REG_SENSOR_INPUT_1_BASECOUNT
#define CAP1188_REG_SENSOR_INPUT_2_BASECOUNT
#define CAP1188_REG_SENSOR_INPUT_3_BASECOUNT
#define CAP1188_REG_SENSOR_INPUT_4_BASECOUNT
#define CAP1188_REG_SENSOR_INPUT_5_BASECOUNT
#define CAP1188_REG_SENSOR_INPUT_6_BASECOUNT
#define CAP1188_REG_SENSOR_INPUT_7_BASECOUNT
#define CAP1188_REG_SENSOR_INPUT_8_BASECOUNT
// LED CONTROLS
#define CAP1188_REG_LED_OUTPUT_TYPE
#define CAP1188_REG_SENSOR_INPUT_LED_LINKING
#define CAP1188_REG_LED_POLARITY
#define CAP1188_REG_LED_OUTPUT_CONTROL
#define CAP1188_REG_LED_LINKED_TRANSITION_CONTROL
#define CAP1188_REG_LED_MIRROR_CONTROL
#define CAP1188_REG_LED_BEHAVIOR_1
#define CAP1188_REG_LED_BEHAVIOR_2
#define CAP1188_REG_LED_PULSE_1_PERIOD
#define CAP1188_REG_LED_PULSE_2_PERIOD
#define CAP1188_REG_LED_BREATHE_PERIOD
#define CAP1188_REG_LED_CONFIG
#define CAP1188_REG_LED_PULSE_1_DUTY_CYCLE
#define CAP1188_REG_LED_PULSE_2_DUTY_CYCLE
#define CAP1188_REG_LED_BREATHE_DUTY_CYCLE
#define CAP1188_REG_LED_DIRECT_DUTY_CYCLE
#define CAP1188_REG_LED_DIRECT_RAMP_RATES
#define CAP1188_REG_LED_OFF_DELAY

#define CAP1188_REG_SENSOR_INPUT_1_CALIBRATION
#define CAP1188_REG_SENSOR_INPUT_2_CALIBRATION
#define CAP1188_REG_SENSOR_INPUT_3_CALIBRATION
#define CAP1188_REG_SENSOR_INPUT_4_CALIBRATION
#define CAP1188_REG_SENSOR_INPUT_5_CALIBRATION
#define CAP1188_REG_SENSOR_INPUT_6_CALIBRATION
#define CAP1188_REG_SENSOR_INPUT_7_CALIBRATION
#define CAP1188_REG_SENSOR_INPUT_8_CALIBRATION

#define CAP1188_REG_SENSOR_INPUT_CALIBRATION_1
#define CAP1188_REG_SENSOR_INPUT_CALIBRATION_2
#define CAP1188_REG_PRODUCT_ID
#define CAP1188_REG_MANUFACTURER_ID
#define CAP1188_REG_REVISION




class Cap1188_touch {
  private:
    uint8_t address = CAP1188_DEFAULT_ADDRESS;

    uint8_t getBuildRevision(void);
    uint8_t getProductID(void);
    uint8_t getMFGID(void);
    uint8_t getRevision(void);
    uint8_t getVendorID(void);

  public:
    Cap1114_touch();
    bool begin(void);
    bool begin(uint8_t newAddress);
    uint32_t getDeviceInfo(void);
    uint8_t getAddress(void);
    void setAddress(uint8_t newAddress);

    uint8_t readRegister(uint8_t reg_address);
    void writeRegister(uint8_t reg_address, uint8_t data);
};


#endif
